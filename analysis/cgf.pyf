!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module cgf ! in 
    interface  ! in :cgf
        subroutine cvsmod(n,x,f,g,s,stp,ftol,gtol,xtol,stpmin,stpmax,maxfev,info,nfev,wa,dginit,dgout,infoout,xout,stpout) ! in :cgf:cgsearch.f
            integer, optional,intent(in),check(len(x)>=n),depend(x) :: n=len(x)
            double precision dimension(n),intent(inout) :: x
            double precision intent(inout) :: f
            double precision dimension(n),intent(inout),depend(n) :: g
            double precision dimension(n),intent(inout),depend(n) :: s
            double precision intent(inout) :: stp
            double precision intent(in) :: ftol
            double precision intent(in) :: gtol
            double precision intent(in) :: xtol
            double precision intent(in) :: stpmin
            double precision intent(in) :: stpmax
            integer intent(in) :: maxfev
            integer intent(inout) :: info
            integer intent(inout) :: nfev
            double precision dimension(n),intent(inout),depend(n) :: wa
            double precision intent(inout) :: dginit
            double precision intent(out) :: dgout
            integer intent(out) :: infoout
            double precision dimension(n),intent(out),depend(n) :: xout
            double precision intent(out) :: stpout
        end subroutine cvsmod
        subroutine cstepm(stx,fx,dx,sty,fy,dy,stp,fp,dp,brackt,stpmin,stpmax,info) ! in :cgf:cgsearch.f
            double precision :: stx
            double precision :: fx
            double precision :: dx
            double precision :: sty
            double precision :: fy
            double precision :: dy
            double precision :: stp
            double precision :: fp
            double precision :: dp
            logical :: brackt
            double precision :: stpmin
            double precision :: stpmax
            integer :: info
        end subroutine cstepm
        subroutine cgfam(n,x,f,g,d,gold,iprint,eps,w,iflag,irest,method,finish,xout,gout,dout,goldout,stpk,oflag,ofinish) ! in :cgf:cgfam.f
            integer, optional,intent(in),check(len(x)>=n),depend(x) :: n=len(x)
            double precision dimension(n),intent(inout) :: x
            double precision intent(in) :: f
            double precision dimension(n),intent(inout),depend(n) :: g
            double precision dimension(n),intent(inout),depend(n) :: d
            double precision dimension(n),intent(inout),depend(n) :: gold
            integer dimension(2),intent(in) :: iprint
            double precision intent(in) :: eps
            double precision dimension(n),intent(inout),depend(n) :: w
            integer intent(inout) :: iflag
            integer intent(in) :: irest
            integer intent(in) :: method
            logical intent(inout) :: finish
            double precision dimension(n),intent(out),depend(n) :: xout
            double precision dimension(n),intent(out),depend(n) :: gout
            double precision dimension(n),intent(out),depend(n) :: dout
            double precision dimension(n),intent(out),depend(n) :: goldout
            double precision intent(out) :: stpk
            integer intent(out) :: oflag
            logical intent(out) :: ofinish
            integer :: mp
            integer :: lp
            integer :: iter
            integer :: nfun
            common /cgdd/ mp,lp
            common /runinf/ iter,nfun
        end subroutine cgfam
        subroutine cgbd(iprint,iter,nfun,gnorm,n,x,f,g,stp,finish,ndes,im,betafr,betapr,beta) ! in :cgf:cgfam.f
            integer dimension(2) :: iprint
            integer :: iter
            integer :: nfun
            double precision :: gnorm
            integer, optional,check(len(x)>=n),depend(x) :: n=len(x)
            double precision dimension(n) :: x
            double precision :: f
            double precision dimension(n),depend(n) :: g
            double precision :: stp
            logical :: finish
            integer :: ndes
            integer :: im
            double precision :: betafr
            double precision :: betapr
            double precision :: beta
            integer :: mp
            integer :: lp
            common /cgdd/ mp,lp
        end subroutine cgbd
        block data cgcd ! in :cgf:cgfam.f
            integer, optional :: mp=6
            integer, optional :: lp=6
            common /cgdd/ mp,lp
        end block data cgcd
    end interface 
end python module cgf

! This file was auto-generated with f2py (version:1.21.2).
! See http://cens.ioc.ee/projects/f2py2e/
