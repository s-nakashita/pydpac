---
title: "Comparison between nested DA and large-scale blending responses"
format: 
  html:
    code-fold: true
    code-tools: true
jupyter: python3
editor: 
  render-on-save: true
---

```{python}
import numpy as np
import numpy.linalg as la
import matplotlib.pyplot as plt
from pathlib import Path
from scipy.interpolate import interp1d
```

## test data

```{python}
model = "l05nestm"
nx_t = 960
obsloc = ""
icycle = 100
gmdir = Path(f'work/{model}/var_vs_envar_dscl_m80obs30')
ix_gm = np.loadtxt(gmdir/'ix_gm.txt')
u_gm = np.load(gmdir/f'data/envar/{model}_gm_uf_linear_envar_cycle{icycle}.npy')
gm2lam = interp1d(ix_gm,u_gm,axis=0)
lamdir = Path(f'work/{model}/var_vs_envar_shrink_dct_preGM{obsloc}_m80obs30')
ix_lam = np.loadtxt(lamdir/'ix_lam.txt')
ub_lam = np.load(lamdir/f'data/envar/{model}_lam_uf_linear_envar_cycle{icycle}.npy')
u_dscl = gm2lam(ix_lam)
u_lam = u_dscl.copy()
u_lam[1:-1,:] = ub_lam[:,:]
# observation
yobsall = np.load(lamdir/f'obs_linear_10000.npy')
yloc = yobsall[icycle,:,0]
yobs = yobsall[icycle,:,1]
iobs_lam = np.where((yloc > ix_lam[0])&(yloc<ix_lam[-1]), 1, 0)
yloclam = yloc[iobs_lam==1]
yobslam = yobs[iobs_lam==1]
```

```{python}
#| fig-cap: background ensemble
#| fig-subcap:
#|   - GM
#|   - GM in the LAM domain
#|   - LAM
#| label: fig-bg

nmem = u_gm.shape[1]
fig, ax = plt.subplots()
ax.plot(ix_gm,u_gm,c='gray',lw=0.5)
ax.plot(ix_gm,u_gm.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloc,yobs,lw=0.0,marker='x',c='r',label='obs')
ax.vlines([ix_lam[0],ix_lam[-1]],0,1,colors='k',ls='dotted',zorder=0,transform=ax.get_xaxis_transform())
ax.legend()
plt.show()

fig, ax = plt.subplots()
ax.plot(ix_lam,u_dscl,c='gray',lw=0.5)
ax.plot(ix_lam,u_dscl.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
ax.legend()
plt.show()

fig, ax = plt.subplots()
ax.plot(ix_lam,u_lam,c='gray',lw=0.5)
ax.plot(ix_lam,u_lam.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
ax.legend()
plt.show()

```

```{python}
#| fig-cap: power spectra of ensemble spread
#| label: fig-psd-sprd

from matplotlib.ticker import FixedLocator, FixedFormatter
from plot.nmc_tools import NMC_tools, wnum2wlen, wlen2wnum

ix_lam_rad = ix_lam * 2.0 * np.pi / nx_t
nmc_lam = NMC_tools(ix_lam_rad,cyclic=False,ttype='c')

fig, ax = plt.subplots()
up_dscl = u_dscl - u_dscl.mean(axis=1)[:,None]
wnum, psd = nmc_lam.psd(up_dscl,axis=0,average=False)
psd_dscl = np.sum(psd,axis=1)/(nmem-1)
ax.loglog(wnum,psd_dscl,c='b',lw=2.0,label='GM in LAM domain')
up_lam = u_lam - u_lam.mean(axis=1)[:,None]
wnum, psd = nmc_lam.psd(up_lam,axis=0,average=False)
psd_lam = np.sum(psd,axis=1)/(nmem-1)
ax.loglog(wnum,psd_lam,c='r',lw=2.0,label='LAM')
ax.grid()
ax.legend()
ax.set_xlabel(r"wave number ($\omega_k=\frac{2\pi}{\lambda_k}$)")
ax.xaxis.set_major_locator(FixedLocator([480,240,120,60,30,12,2]))
ax.xaxis.set_major_formatter(FixedFormatter(['480','240','120','60','30','12','2']))
secax = ax.secondary_xaxis('top',functions=(wnum2wlen,wlen2wnum))
secax.set_xlabel(r'wave length ($\lambda_k=\frac{2\pi}{\omega_k}$)')
secax.xaxis.set_major_locator(FixedLocator([np.pi,np.pi/6.,np.pi/15.,np.pi/30.,np.pi/60.,np.pi/120.,np.pi/240.]))
secax.xaxis.set_major_formatter(FixedFormatter([r'$\pi$',r'$\frac{\pi}{6}$',r'$\frac{\pi}{15}$',r'$\frac{\pi}{30}$',r'$\frac{\pi}{60}$',r'$\frac{\pi}{120}$',r'$\frac{\pi}{240}$']))
plt.show()

```

## LAM DA

```{python}
from analysis.obs import Obs
from analysis.envar import EnVAR
obsope = Obs('linear',1.0,ix=ix_lam[1:-1],icyclic=False)
envar_params = {'model':model}
envar = EnVAR(ix_lam.size-2,nmem,obsope,**envar_params)
pf_lam = envar.calc_pf(u_lam)

```
```{python}

args = (u_lam[1:-1],pf_lam,yobslam,yloclam)
u_anl, pa_lam, _, _, _, _ = envar(*args,icycle=icycle)
ua_lam = u_lam.copy()
ua_lam[1:-1] = u_anl

```

```{python}
#| fig-cap: LAM DA
#| fig-subcap:
#|   - analysis ensemble
#|   - difference from background (increment)
#| label: fig-anl

fig, ax = plt.subplots()
ax.plot(ix_lam,ua_lam,c='gray',lw=0.5)
ax.plot(ix_lam,ua_lam.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
ax.legend()
plt.show()

u_diff = ua_lam - u_lam
fig, ax = plt.subplots()
ax.plot(ix_lam,u_diff,c='gray',lw=0.5)
ax.plot(ix_lam,u_diff.mean(axis=1),c='b',lw=2.0,label='mean')
ax.legend()
plt.show()

```

```{python}
#| fig-cap: power spectra of analysis ensemble spread
#| label: fig-psd-sprd-anl

fig, ax = plt.subplots()
ax.loglog(wnum,psd_dscl,c='b',lw=2.0,label='GM in LAM domain')
ax.loglog(wnum,psd_lam,c='r',lw=2.0,label='LAM')
uap_lam = ua_lam - ua_lam.mean(axis=1)[:,None]
wnum, psd = nmc_lam.psd(uap_lam,axis=0,average=False)
psd_alam = np.sum(psd,axis=1)/(nmem-1)
ax.loglog(wnum,psd_alam,c='g',lw=2.0,label='LAM analysis')
ax.grid()
ax.legend()
ax.set_xlabel(r"wave number ($\omega_k=\frac{2\pi}{\lambda_k}$)")
ax.xaxis.set_major_locator(FixedLocator([480,240,120,60,30,12,2]))
ax.xaxis.set_major_formatter(FixedFormatter(['480','240','120','60','30','12','2']))
secax = ax.secondary_xaxis('top',functions=(wnum2wlen,wlen2wnum))
secax.set_xlabel(r'wave length ($\lambda_k=\frac{2\pi}{\omega_k}$)')
secax.xaxis.set_major_locator(FixedLocator([np.pi,np.pi/6.,np.pi/15.,np.pi/30.,np.pi/60.,np.pi/120.,np.pi/240.]))
secax.xaxis.set_major_formatter(FixedFormatter([r'$\pi$',r'$\frac{\pi}{6}$',r'$\frac{\pi}{15}$',r'$\frac{\pi}{30}$',r'$\frac{\pi}{60}$',r'$\frac{\pi}{120}$',r'$\frac{\pi}{240}$']))
plt.show()

```

## background blending

```{python}
from analysis.trunc1d import Trunc1d

trunc_kwargs = {'ntrunc':12,'cyclic':False,'ttype':'c','nghost':0,'resample':False}
trunc_operator = Trunc1d(ix_lam_rad,**trunc_kwargs)

udf = trunc_operator(u_dscl - u_lam)
u_bld = u_lam + udf

```

```{python}
#| fig-cap: background blending
#| fig-subcap:
#|   - blended ensemble
#|   - difference from original LAM ensemble
#| label: fig-lsb

fig, ax = plt.subplots()
ax.plot(ix_lam,u_bld,c='gray',lw=0.5)
ax.plot(ix_lam,u_bld.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
ax.legend()
plt.show()

u_diff = u_bld - u_lam
fig, ax = plt.subplots()
ax.plot(ix_lam,u_diff,c='gray',lw=0.5)
ax.plot(ix_lam,u_diff.mean(axis=1),c='b',lw=2.0,label='mean')
ax.legend()
plt.show()

```

```{python}
#| fig-cap: power spectra of blended ensemble spread
#| label: fig-psd-sprd-bld

fig, ax = plt.subplots()
ax.loglog(wnum,psd_dscl,c='b',lw=2.0,label='GM in LAM domain')
ax.loglog(wnum,psd_lam,c='r',lw=2.0,label='LAM')
up_bld = u_bld - u_bld.mean(axis=1)[:,None]
wnum, psd = nmc_lam.psd(up_bld,axis=0,average=False)
psd_bld = np.sum(psd,axis=1)/(nmem-1)
ax.loglog(wnum,psd_bld,c='purple',lw=2.0,label='blended')
ax.vlines([trunc_operator.ftrunc],0,1,colors='purple',ls='dashed',zorder=0,transform=ax.get_xaxis_transform())
ax.grid()
ax.legend()
ax.set_xlabel(r"wave number ($\omega_k=\frac{2\pi}{\lambda_k}$)")
ax.xaxis.set_major_locator(FixedLocator([480,240,120,60,30,12,2]))
ax.xaxis.set_major_formatter(FixedFormatter(['480','240','120','60','30','12','2']))
secax = ax.secondary_xaxis('top',functions=(wnum2wlen,wlen2wnum))
secax.set_xlabel(r'wave length ($\lambda_k=\frac{2\pi}{\omega_k}$)')
secax.xaxis.set_major_locator(FixedLocator([np.pi,np.pi/6.,np.pi/15.,np.pi/30.,np.pi/60.,np.pi/120.,np.pi/240.]))
secax.xaxis.set_major_formatter(FixedFormatter([r'$\pi$',r'$\frac{\pi}{6}$',r'$\frac{\pi}{15}$',r'$\frac{\pi}{30}$',r'$\frac{\pi}{60}$',r'$\frac{\pi}{120}$',r'$\frac{\pi}{240}$']))
plt.show()

```

### blending + DA

```{python}

pf_bld = envar.calc_pf(u_bld)
args = (u_bld[1:-1],pf_bld,yobslam,yloclam)
u_anl, pa_bld, _, _, _, _ = envar(*args,icycle=icycle)
ua_bld = u_bld.copy()
ua_bld[1:-1] = u_anl

```

```{python}
#| fig-cap: LAM blending + DA
#| fig-subcap:
#|   - analysis ensemble
#|   - difference from blended background (increment)
#|   - difference from original background
#| label: fig-bld-anl

fig, ax = plt.subplots()
ax.plot(ix_lam,ua_bld,c='gray',lw=0.5)
ax.plot(ix_lam,ua_bld.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
ax.legend()
plt.show()

u_diff = ua_bld - u_bld
fig, ax = plt.subplots()
ax.plot(ix_lam,u_diff,c='gray',lw=0.5)
ax.plot(ix_lam,u_diff.mean(axis=1),c='b',lw=2.0,label='mean')
ax.legend()
plt.show()

u_diff = ua_bld - u_lam
fig, ax = plt.subplots()
ax.plot(ix_lam,u_diff,c='gray',lw=0.5)
ax.plot(ix_lam,u_diff.mean(axis=1),c='b',lw=2.0,label='mean')
ax.legend()
plt.show()

```

```{python}
#| fig-cap: power spectra of analysis ensemble spread
#| label: fig-psd-sprd-bld-anl

fig, ax = plt.subplots()
ax.loglog(wnum,psd_dscl,c='b',lw=2.0,label='GM in LAM domain')
ax.loglog(wnum,psd_lam,c='r',lw=2.0,label='LAM')
uap_bld = ua_bld - ua_bld.mean(axis=1)[:,None]
wnum, psd = nmc_lam.psd(uap_bld,axis=0,average=False)
psd_alam = np.sum(psd,axis=1)/(nmem-1)
ax.loglog(wnum,psd_alam,c='g',lw=2.0,label='LAM analysis')
ax.vlines([trunc_operator.ftrunc],0,1,colors='purple',ls='dashed',zorder=0,transform=ax.get_xaxis_transform())
ax.grid()
ax.legend()
ax.set_xlabel(r"wave number ($\omega_k=\frac{2\pi}{\lambda_k}$)")
ax.xaxis.set_major_locator(FixedLocator([480,240,120,60,30,12,2]))
ax.xaxis.set_major_formatter(FixedFormatter(['480','240','120','60','30','12','2']))
secax = ax.secondary_xaxis('top',functions=(wnum2wlen,wlen2wnum))
secax.set_xlabel(r'wave length ($\lambda_k=\frac{2\pi}{\omega_k}$)')
secax.xaxis.set_major_locator(FixedLocator([np.pi,np.pi/6.,np.pi/15.,np.pi/30.,np.pi/60.,np.pi/120.,np.pi/240.]))
secax.xaxis.set_major_formatter(FixedFormatter([r'$\pi$',r'$\frac{\pi}{6}$',r'$\frac{\pi}{15}$',r'$\frac{\pi}{30}$',r'$\frac{\pi}{60}$',r'$\frac{\pi}{120}$',r'$\frac{\pi}{240}$']))
plt.show()

```

## Nested DA

```{python}
from analysis.envar_nest import EnVAR_nest
params = {'model':model}
envar_nest_params = {**params,**trunc_kwargs}
envar_nest_params['resample'] = True
envar_nest = EnVAR_nest(ix_lam.size-2,nmem,obsope,ix_gm,ix_lam[1:-1],**envar_nest_params)

```
```{python}

args = (u_lam[1:-1],pf_lam,yobslam,yloclam,u_gm)
u_anl, pa_nest, _, _, _, _ = envar_nest(*args,icycle=icycle)
ua_nest = u_lam.copy()
ua_nest[1:-1] = u_anl

```

```{python}
#| fig-cap: Nested DA
#| fig-subcap:
#|   - analysis ensemble
#|   - difference from background (increment)
#| label: fig-nest

fig, ax = plt.subplots()
ax.plot(ix_lam,ua_nest,c='gray',lw=0.5)
ax.plot(ix_lam,ua_nest.mean(axis=1),c='b',lw=2.0,label='mean')
ax.plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
ax.legend()
plt.show()

u_diff = ua_nest - u_lam
fig, ax = plt.subplots()
ax.plot(ix_lam,u_diff,c='gray',lw=0.5)
ax.plot(ix_lam,u_diff.mean(axis=1),c='b',lw=2.0,label='mean')
ax.legend()
plt.show()

```

```{python}
#| fig-cap: power spectra of nested analysis ensemble spread
#| label: fig-psd-sprd-nest

fig, ax = plt.subplots()
ax.loglog(wnum,psd_dscl,c='b',lw=2.0,label='GM in LAM domain')
ax.loglog(wnum,psd_lam,c='r',lw=2.0,label='LAM')
uap_nest = ua_nest - ua_nest.mean(axis=1)[:,None]
wnum, psd = nmc_lam.psd(uap_nest,axis=0,average=False)
psd_nest = np.sum(psd,axis=1)/(nmem-1)
ax.loglog(wnum,psd_nest,c='g',lw=2.0,label='Nested analysis')
ax.vlines([trunc_operator.ftrunc],0,1,colors='g',ls='dashed',zorder=0,transform=ax.get_xaxis_transform())
ax.grid()
ax.legend()
ax.set_xlabel(r"wave number ($\omega_k=\frac{2\pi}{\lambda_k}$)")
ax.xaxis.set_major_locator(FixedLocator([480,240,120,60,30,12,2]))
ax.xaxis.set_major_formatter(FixedFormatter(['480','240','120','60','30','12','2']))
secax = ax.secondary_xaxis('top',functions=(wnum2wlen,wlen2wnum))
secax.set_xlabel(r'wave length ($\lambda_k=\frac{2\pi}{\omega_k}$)')
secax.xaxis.set_major_locator(FixedLocator([np.pi,np.pi/6.,np.pi/15.,np.pi/30.,np.pi/60.,np.pi/120.,np.pi/240.]))
secax.xaxis.set_major_formatter(FixedFormatter([r'$\pi$',r'$\frac{\pi}{6}$',r'$\frac{\pi}{15}$',r'$\frac{\pi}{30}$',r'$\frac{\pi}{60}$',r'$\frac{\pi}{120}$',r'$\frac{\pi}{240}$']))
plt.show()

```

## Comparison

```{python}
#| fig-cap: comparison of analysis ensemble
#| fig-subcap:
#|   - analysis
#|   - increment
#| label: fig-comp

fig, axs = plt.subplots(ncols=3,sharey=True,constrained_layout=True)
figi, axsi = plt.subplots(ncols=3,sharey=True,constrained_layout=True)
titles = ['DA','bld+DA','Nested DA']
for i, ua in enumerate([ua_lam,ua_bld,ua_nest]):
    axs[i].plot(ix_lam,ua,c='gray',lw=0.5)
    axs[i].plot(ix_lam,ua.mean(axis=1),c='b',lw=2.0,label='mean')
    axs[i].plot(yloclam,yobslam,lw=0.0,marker='x',c='r',label='obs')
    axs[i].set_title(titles[i])

    u_diff = ua - u_lam
    axsi[i].plot(ix_lam,u_diff,c='gray',lw=0.5)
    axsi[i].plot(ix_lam,u_diff.mean(axis=1),c='b',lw=2.0,label='mean')
    axsi[i].set_title(titles[i]+' increment')
axs[0].legend()
axsi[0].legend()
plt.show()

```


```{python}
#| fig-cap: comparison of power spectra for ensemble spread
#| label: fig-comp-psd-sprd

fig, ax = plt.subplots()
#ax.loglog(wnum,psd_dscl,c='b',lw=2.0,label='GM in LAM domain')
ax.loglog(wnum,psd_lam,c='k',lw=2.0,label='background')
for i, ua in enumerate([ua_lam,ua_bld,ua_nest]):
    up = ua - ua.mean(axis=1)[:,None]
    wnum, psd = nmc_lam.psd(up,axis=0,average=False)
    psd_a = np.sum(psd,axis=1)/(nmem-1)
    ax.loglog(wnum,psd_a,lw=2.0,label=titles[i])
ax.vlines([trunc_operator.ftrunc],0,1,colors='magenta',ls='dashed',zorder=0,transform=ax.get_xaxis_transform())
ax.grid()
ax.legend()
ax.set_xlabel(r"wave number ($\omega_k=\frac{2\pi}{\lambda_k}$)")
ax.xaxis.set_major_locator(FixedLocator([480,240,120,60,30,12,2]))
ax.xaxis.set_major_formatter(FixedFormatter(['480','240','120','60','30','12','2']))
secax = ax.secondary_xaxis('top',functions=(wnum2wlen,wlen2wnum))
secax.set_xlabel(r'wave length ($\lambda_k=\frac{2\pi}{\omega_k}$)')
secax.xaxis.set_major_locator(FixedLocator([np.pi,np.pi/6.,np.pi/15.,np.pi/30.,np.pi/60.,np.pi/120.,np.pi/240.]))
secax.xaxis.set_major_formatter(FixedFormatter([r'$\pi$',r'$\frac{\pi}{6}$',r'$\frac{\pi}{15}$',r'$\frac{\pi}{30}$',r'$\frac{\pi}{60}$',r'$\frac{\pi}{120}$',r'$\frac{\pi}{240}$']))
plt.show()

```
